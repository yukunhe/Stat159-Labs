lam = seq(0, 0.5, 0.001)
nf = 1000
lam = (1:nf)/(2*nf)
varvec = fAR4(lam)/nf
sigvec = sqrt(varvec)
A = rep(-9999, nf)
B = rep(-9999, nf)
n = 400
dta = matrix(-9999, nf, n)
for(i in 1:nf)
{
A[i] = rnorm(1, 0, sigvec[i])
B[i] = rnorm(1, 0, sigvec[i])
dta[i,] = A[i]*cos(2*pi*lam[i]*tme) + B[i]*sin(2*pi*lam[i]*tme)
}
dt = dta[1,]
for(i in 2:nf)
{
dt = dt + dta[i,]
}
acf(dt, lag.max = 50, type = "correlation", plot = T, main = 'ACF of simulated data')
phi.ar12=c(0.5,rep(0,10),0.7,0.-0.35)
acf.ar.ar12 = ARMAacf(ar=phi.ar12,lag.max=50)
plot(x = 0:50,y = acf.ar.ar12, type = "h", xlab = "k",
ylab = "Autocorrelation", main = "Theoretical ACF")
abline(h=0)
fAR4 = function(lam)
{
var*(1 /((1-2*0.7*cos(2*pi*12*lam) + 0.7^2)*(1-2*0.5*cos(2*pi*lam)+0.5^2)))
}
sig = sqrt(var)
lam = seq(0, 0.5, 0.001)
fAR4 = function(lam)
{
var*(1 /((1-2*0.7*cos(2*pi*12*lam) + 0.7^2)*(1-2*0.5*cos(2*pi*lam)+0.5^2)))
}
sig = sqrt(var)
lam = seq(0, 0.5, 0.001)
nf = 1000
lam = (1:nf)/(2*nf)
varvec = fAR4(lam)/nf
sigvec = sqrt(varvec)
A = rep(-9999, nf)
var = 1
fAR4 = function(lam)
{
var*(1 /((1-2*0.7*cos(2*pi*12*lam) + 0.7^2)*(1-2*0.5*cos(2*pi*lam)+0.5^2)))
}
sig = sqrt(var)
lam = seq(0, 0.5, 0.001)
nf = 1000
lam = (1:nf)/(2*nf)
varvec = fAR4(lam)/nf
sigvec = sqrt(varvec)
A = rep(-9999, nf)
B = rep(-9999, nf)
n = 400
dta = matrix(-9999, nf, n)
for(i in 1:nf)
{
A[i] = rnorm(1, 0, sigvec[i])
B[i] = rnorm(1, 0, sigvec[i])
dta[i,] = A[i]*cos(2*pi*lam[i]*tme) + B[i]*sin(2*pi*lam[i]*tme)
}
tme = 0:(n-1)
tme = 0:(n-1)
nf = 1000
lam = (1:nf)/(2*nf)
varvec = fAR4(lam)/nf
sigvec = sqrt(varvec)
A = rep(-9999, nf)
B = rep(-9999, nf)
n = 400
dta = matrix(-9999, nf, n)
for(i in 1:nf)
{
A[i] = rnorm(1, 0, sigvec[i])
B[i] = rnorm(1, 0, sigvec[i])
dta[i,] = A[i]*cos(2*pi*lam[i]*tme) + B[i]*sin(2*pi*lam[i]*tme)
}
dt = dta[1,]
for(i in 2:nf)
{
dt = dt + dta[i,]
}
acf(dt, lag.max = 50, type = "correlation", plot = T, main = 'ACF of simulated data')
n = 400
tme = 0:(n-1)
nf = 1000
lam = (1:nf)/(2*nf)
varvec = fAR4(lam)/nf
sigvec = sqrt(varvec)
A = rep(-9999, nf)
B = rep(-9999, nf)
dta = matrix(-9999, nf, n)
for(i in 1:nf)
{
A[i] = rnorm(1, 0, sigvec[i])
B[i] = rnorm(1, 0, sigvec[i])
dta[i,] = A[i]*cos(2*pi*lam[i]*tme) + B[i]*sin(2*pi*lam[i]*tme)
}
dt = dta[1,]
for(i in 2:nf)
{
dt = dt + dta[i,]
}
acf(dt, lag.max = 50, type = "correlation", plot = T, main = 'ACF of simulated data')
n = 400
tme = 0:(n-1)
nf = 1000
lam = (1:nf)/(2*nf)
varvec = fAR4(lam)/nf
sigvec = sqrt(varvec)
A = rep(-9999, nf)
B = rep(-9999, nf)
dta = matrix(-9999, nf, n)
for(i in 1:nf)
{
A[i] = rnorm(1, 0, sigvec[i])
B[i] = rnorm(1, 0, sigvec[i])
dta[i,] = A[i]*cos(2*pi*lam[i]*tme) + B[i]*sin(2*pi*lam[i]*tme)
}
dt = dta[1,]
for(i in 2:nf)
{
dt = dt + dta[i,]
}
acf(dt, lag.max = 50, type = "correlation", plot = T, main = 'ACF of simulated data')
n = 400
tme = 0:(n-1)
nf = 1000
lam = (1:nf)/(2*nf)
varvec = fAR4(lam)/nf
sigvec = sqrt(varvec)
A = rep(-9999, nf)
B = rep(-9999, nf)
dta = matrix(-9999, nf, n)
for(i in 1:nf)
{
A[i] = rnorm(1, 0, sigvec[i])
B[i] = rnorm(1, 0, sigvec[i])
dta[i,] = A[i]*cos(2*pi*lam[i]*tme) + B[i]*sin(2*pi*lam[i]*tme)
}
dt = dta[1,]
for(i in 2:nf)
{
dt = dt + dta[i,]
}
acf(dt, lag.max = 50, type = "correlation", plot = T, main = 'ACF of simulated data')
var = 1
a = 0.5
b = 0.9
s = 12
fAR = function(lam)
{
var/((1-2*b*cos(2*pi*s*lam) + b^2)*(1-2*a*cos(2*pi*lam)+a^2))
}
sig = sqrt(var)
lam = seq(0, 0.5, 0.001)
plot(lam, fAR(lam), type = "l", main = ('AR(1)*AR(1)_12'))
plot(lam, log(fAR(lam)), type = "l", main = ('AR(1)*AR(1)_12'))
?dbinom()
plot(x=x, y=dbinom(x, 10, 0.5))
plot(x=seq(0,20,0.1), y=dbinom(x, 10, 0.5))
plot(x=seq(0,20,0.1), y=dbinom(x, 10, 0.5))
x=seq(0,20,0.1)
plot(x, y=dbinom(x, 10, 0.5))
x=seq(0,20,0.5)
plot(x, y=dbinom(x, 10, 0.5))
x=seq(0,20,1)
plot(x, y=dbinom(x, 10, 0.5))
x=seq(-10,15,1)
plot(x, y=dbinom(x, 10, 0.5))
x=seq(-5,15,1)
plot(x, y=dbinom(x, 10, 0.5))
plot(x, y=dbinom(x, 10, 0.5), main = 'probability distribution of X ∼ b(10, 0.5)')
plot(x, y=dbinom(x, 10, 0.5), main = 'probability distribution of X∼b(10, 0.5)')
plot(x, y=dbinom(x, 10, 0.5), main = 'probability distribution of b(10, 0.5)')
?pbinom()
plot(x, y=pbinom(x, 10, 0.5), main = 'probability distribution of b(10, 0.5)')
?pbinom()
?pbinom()
plot(x, y=dbinom(x, 10, 0.5), main = 'probability distribution of b(10, 0.5)', type = 'l')
x=seq(-5,15,0.1)
plot(x, y=dbinom(x, 10, 0.5), main = 'probability distribution of b(10, 0.5)', type = 'l')
x=seq(-5,15,0.5)
plot(x, y=dbinom(x, 10, 0.5), main = 'probability distribution of b(10, 0.5)', type = 'l')
x=seq(-5,15,2)
plot(x, y=dbinom(x, 10, 0.5), main = 'probability distribution of b(10, 0.5)', type = 'l')
x=seq(-5,15,1)
plot(x, y=dbinom(x, 10, 0.5), main = 'probability distribution of b(10, 0.5)', type = 'l')
plot(x, y=dbinom(x, 10, 0.5), main = 'probability distribution of b(10, 0.5)')
x=seq(-5,15,0.1)
plot(x, y=dbinom(x, 10, 0.5), main = 'probability distribution of b(10, 0.5)')
x=seq(-5,15,1)
plot(x, y=dbinom(x, 10, 0.5), main = 'probability distribution of b(10, 0.5)')
pbinom(4, 20, 0.3)
1-pbinom(8, 20, 0.3)
1-pbinom(8, 20, 0.3) + dbinom(8,20,0.3)
1 - pbinom(5, 20, 0.3)
pbinom(7, 20, 0.3)-  pbinom(2, 20, 0.3)
pbinom(3, 20, 0.3) - dbinom(3,20,0.3)
?qbinom()
qbinom(0.05,400,0.58)
qbinom(0.05,490,0.58)
qbinom(0.05,590,0.58)
qbinom(0.05,580,0.58)
qbinom(0.05,577,0.58)
qbinom(0.05,575,0.58)
qbinom(0.05,572,0.58)
qbinom(0.05,571,0.58)
qbinom(0.05,570,0.58)
qbinom(0.05,569,0.58)
qbinom(0.05,568,0.58)
qbinom(0.05,566,0.58)
qbinom(0.05,565,0.58)
qbinom(0.05,566,0.58)
qbinom(0.05,566,0.58)
header=TRUE)
a <- read.table("http://www.stat.ucla.edu/~nchristo/statistics12/soil.txt",header=TRUE)
a
hist(a$lead)
hist(a$lead, main = 'Histogram of lead')
sd(lead)
u = mean(lead)
u = mean(a$lead)
sd(a$lead)
sd = sd(a$lead)
u
sd
?sim()
?replicate9
?replicate()
?rep()
?sample()
sample(a$lead, 100000, replace = T)
sim1 = sample(a$lead, 100000, replace = T)
?matrix9
?matrix()
matrix1 = matrix(sim1, nrow = 500)
matrix1
ncol(matrix)
ncol(matrix1)
matrix1 = matrix(sim1, nrow = 5200)
matrix1 = matrix(sim1, nrow = 200)
ncol(matrix1)
matrix1 = matrix(sim1, nrow = 500)
for ( i in 1:500) {
mean(matrix1[,i])
}
for ( i in 1:200) {
mean(matrix1[,i])
}
for ( i in 1:200) {
sample_mean = mean(matrix1[,i])
}
sample_mean
for ( i in 1:200) {
sample_mean = mean(matrix1[,i])
i = i + 1
}
sample_mean
sample_mean = rep(0,200)
sample_mean
sample_mean = rep(0,200)
for ( i in 1:200) {
sample_mean[i] = mean(matrix1[,i])
i = i + 1
}
sample_mean
hist(sample_mean, main = 'Histogram of 200 sample means')
mean(sample_mean)
mean(sim1)
sd(a$lead)
mean(sim1)
sd(a$lead)
mean(sample_mean)+2.5*sd(a$lead)/sqrt(200)
mean(sim1)+2.5*sd(a$lead)/sqrt(200)
mean(sim1) - 2.5*sd(a$lead)/sqrt(200)
sim2 = sample(a$lead, 2000, replace = T)
matrix2 = matrix(sim2, nrow = 5)
sample_mean2 = rep(0,400)
for ( i in 1:400) {
sample_mean2[i] = mean(matrix2[,i])
i = i + 1
}
hist(sample_mean2, main = 'Histogram of 400 sample means')
a
sim3 = sample(a$zinc, 100000, replace = T)
matrix3 = matrix(sim3, nrow = 500)
sample_mean3 = rep(0,200)
for ( i in 1:200) {
sample_mean3[i] = mean(matrix3[,i])
i = i + 1
}
hist(sample_mean3, main = 'Histogram of 200 sample means')
County = c('Hancock', 'Brooke')
Seat = c('New Cumberland','Wellsburg')
Longitude = c('1','2')
Latitude = c('1','2')
Percent1 = c('1','2')
Percent2 = c('1','2')
data.frame(County,Seat,Longitude,Latitude)
data.frame(County,Seat,Longitude,Latitude,Percent1,Percent2)
library(maps)
install.packages(maps)
install.packages('maps')
install.packages("maps")
library(maps)
a <- read.table("http://www.stat.ucla.edu/~nchristo/statistics12/ozone.txt", header=TRUE)
head(a)
County = c('Barbour County', 'Berkeley County','Boone County','Braxton County','Brooke County',
'Cabell County','Calhoun County','Clay County','Doddridge County','Fayette County','Gilmer County','Grant County','Greenbrier County','Hampshire County','Hardy County','Harrison County','Jackson County','Jefferson County','Kanawha County','Lewis County','Lincoln County')
Seat = c('Philippi','Martinsburg','Madison','Sutton','Wellsburg','Huntington','Grantsville','Clay','West Union','Fayetteville','Glenville','Petersburg','Lewisburg','Romney','Moorefield','Clarksburg','Ripley','Charles Town','Charleston','Weston','Hamlin')
Longitude = c('80','78.03','81.72','80.73','80.58','82.24','81.12','81.07','80.70','81.09','80.85','79.2','80.45','78.61','78.86','80.38','81.67','77.86','81.53','80.51')
length(county)
length(County)
length(Seat)
Longitude = c('80','78.03','81.72','80.73','80.58','82.24','81.12','81.07','80.70','81.09','80.85','79.2','80.45','78.61','78.86','80.38','81.67','77.86','81.53','80.51','82.07')
Latitude = c('39.13','39.47','39.02','38.70','40.27','38.42','38.84','38.46','39.26','38.03','38.92','39.1','37.95','39.31','39.01','39.29','38.83','39.31','38.34','39.00','38.18')
length(Longitude)
length(Latitude)
County = c('Barbour County', 'Berkeley County','Boone County','Braxton County','Brooke County',
'Cabell County','Calhoun County','Clay County','Doddridge County','Fayette County','Gilmer County','Grant County','Greenbrier County','Hampshire County','Hardy County','Harrison County','Jackson County','Jefferson County','Kanawha County','Lewis County','Lincoln County','Logan County','Marion County','Marshall County','Mason County','McDowell County','Mercer County','Mineral County','Mingo County','Monongalia County')
Seat = c('Philippi','Martinsburg','Madison','Sutton','Wellsburg','Huntington','Grantsville','Clay','West Union','Fayetteville','Glenville','Petersburg','Lewisburg','Romney','Moorefield','Clarksburg','Ripley','Charles Town','Charleston','Weston','Hamlin','Logan','Fairmont','Moundsville','Point Pleasant','Welch','Princeton','Keyser','Williamson','Morgantown')
Longitude = c('80','78.03','81.72','80.73','80.58','82.24','81.12','81.07','80.70','81.09','80.85','79.2','80.45','78.61','78.86','80.38','81.67','77.86','81.53','80.51','82.07','81.94','80.24','80.67','82.02','81.65','81.11','78.94','82.14','80.05')
Latitude = c('39.13','39.47','39.02','38.70','40.27','38.42','38.84','38.46','39.26','38.03','38.92','39.1','37.95','39.31','39.01','39.29','38.83','39.31','38.34','39.00','38.18','37.83','39.51','39.87','38.77','37.37','37.41','39.42','37.73','39.63')
data.frame(County,Seat,Longitude,Latitude)
a = data.frame(County,Seat,Longitude,Latitude)
a <- read.table("http://www.stat.ucla.edu/~nchristo/statistics12/ozone.txt", header=TRUE)
head(a)
b = data.frame(County,Seat,Longitude,Latitude)
plot(b$Longitude, b$Latitude, xlim=c(-125,-114),ylim=c(32,43), xlab="Longitude",
ylab="Latitude", main="Ozone locations in California", "n")
plot(b$Longitude, b$Latitude, xlim=c(70,100),ylim=c(32,43), xlab="Longitude",
ylab="Latitude", main="Ozone locations in California", "n")
b = data.frame(County,Seat,Longitude,Latitude)
plot(b$Longitude, b$Latitude, xlim=c(70,100),ylim=c(32,43), xlab="Longitude",ylab="Latitude", main="Ozone locations in California")
map("county", "ca",add=TRUE)
map("county", "West Virginia",add=TRUE)
points(b$Longitude, b$Latitude)
b = data.frame(County,Seat,Longitude,Latitude)
plot(b$Longitude, b$Latitude, xlim=c(70,100),ylim=c(32,43), xlab="Longitude",ylab="Latitude", main="Ozone locations in California")
b = data.frame(County,Seat,Longitude,Latitude)
b = data.frame(County,Seat,Longitude,Latitude)
b
library(maps)
plot(b$Longitude, b$Latitude, xlim=c(70,100),ylim=c(32,43), xlab="Longitude",ylab="Latitude", main="Ozone locations in California")
plot(b$Longitude, b$Latitude, xlab="Longitude",ylab="Latitude", main="Ozone locations in California")
b = data.frame(County,Seat,Longitude,Latitude)
library(maps)
plot(b$Longitude, b$Latitude, xlab="Longitude",ylab="Latitude", main="Ozone locations in California")
b = data.frame(County,Seat,Longitude,Latitude)
library(maps)
plot(b$Longitude, b$Latitude, xlab="Longitude",ylab="Latitude")
map("county", "West Virginia",add=TRUE)
points(b$Longitude, b$Latitude)
x = seq(2,12,1)
x
a = rep(0,100)
a
for (i in 1:100) {
mean = mean(sample(x, 100, prob=c(seq(1,6,1)/36, seq(5,1,-1)/36), replace=TRUE))
a[i] = mean
}
a
for (i in 1:100) {
mean = mean(sample(x, 100, prob=c(seq(1,6,1)/36, seq(5,1,-1)/36), replace=TRUE))
sd = sd(sample(x, 100, prob=c(seq(1,6,1)/36, seq(5,1,-1)/36), replace=TRUE))
a[i] = mean
b[i] = sd
}
b
a
sd(s1)
x = seq(2,12,1)
s1 <- sample(x, 100, prob=c(seq(1,6,1)/36, seq(5,1,-1)/36), replace=TRUE)
mean(s1)
sd(s1)
a = rep(0,100)
b = rep(0,100)
for (i in 1:100) {
mean = mean(sample(x, 100, prob=c(seq(1,6,1)/36, seq(5,1,-1)/36), replace=TRUE))
sd = sd(sample(x, 100, prob=c(seq(1,6,1)/36, seq(5,1,-1)/36), replace=TRUE))
a[i] = mean
b[i] = sd
}
b
x = seq(2,12,1)
s1 <- sample(x, 100, prob=c(seq(1,6,1)/36, seq(5,1,-1)/36), replace=TRUE)
mean(s1)
sd(s1)
m = rep(0,100)
s = rep(0,100)
for (i in 1:100) {
mean = mean(sample(x, 100, prob=c(seq(1,6,1)/36, seq(5,1,-1)/36), replace=TRUE))
sd = sd(sample(x, 100, prob=c(seq(1,6,1)/36, seq(5,1,-1)/36), replace=TRUE))
m[i] = mean
s[i] = sd
}
m
s
ci_left = m - qt(0.975, df = 99) * s /sqrt(100)
ci_left
ci_right = m + qt(0.975, df = 99) * s /sqrt(100)
ci_right
length = ci_right - ci_left
length
data.frame(m,s,ci_left, ci_right)
sum(ci_left > 7)
sum(ci_left > 7) + sum(ci_right < 7)
a <- read.table("http://www.stat.ucla.edu/~nchristo/statistics12/soil.txt",header=TRUE)
head(a)
x = seq(2,12,1)
s1 <- sample(x, 100, prob=c(seq(1,6,1)/36, seq(5,1,-1)/36), replace=TRUE)
mean(s1)
sd(s1)
x = seq(2,12,1)
m = rep(0,100)
s = rep(0,100)
for (i in 1:100) {
mean = mean(sample(x, 100, prob=c(seq(1,6,1)/36, seq(5,1,-1)/36), replace=TRUE))
sd = sd(sample(x, 100, prob=c(seq(1,6,1)/36, seq(5,1,-1)/36), replace=TRUE))
m[i] = mean
s[i] = sd
}
ci_left = m - qt(0.975, df = 99) * s /sqrt(100)
ci_right = m + qt(0.975, df = 99) * s /sqrt(100)
length = ci_right - ci_left
length
data.frame(m,s,ci_left, ci_right)
sum(ci_left > 7) + sum(ci_right < 7)
sum(ci_left > 7) + sum(ci_right < 7)
x = seq(2,12,1)
m = rep(0,100)
s = rep(0,100)
for (i in 1:100) {
mean = mean(sample(x, 100, prob=c(seq(1,6,1)/36, seq(5,1,-1)/36), replace=TRUE))
sd = sd(sample(x, 100, prob=c(seq(1,6,1)/36, seq(5,1,-1)/36), replace=TRUE))
m[i] = mean
s[i] = sd
}
ci_left = m - qt(0.975, df = 99) * s /sqrt(100)
ci_right = m + qt(0.975, df = 99) * s /sqrt(100)
length = ci_right - ci_left
length
data.frame(m,s,ci_left, ci_right)
sum(ci_left > 7) + sum(ci_right < 7)
a <- read.table("http://www.stat.ucla.edu/~nchristo/statistics12/soil.txt",header=TRUE)
head(a)
a
mean(sample(a$lead, 100, replace=TRUE))
m1 = rep(0,100)
s1 = rep(0,100)
for (i in 1:100) {
mean1 = mean(sample(a$lead, 100, replace=TRUE))
sd1 = sd(sample(a$lead, 100, replace=TRUE))
m1[i] = mean1
s1[i] = sd1
}
mean1
m1
sd1
ci_left1 = m1 - qt(0.975, df = 99) * s1 /sqrt(100)
ci_right1 = m1 + qt(0.975, df = 99) * s1 /sqrt(100)
length1 = ci_right1 - ci_left1
length1
data.frame(m1,s1,ci_left1, ci_right1)
sum(ci_left1 > 7) + sum(ci_right1 < 7)
sum(ci_left1 > 153) + sum(ci_right1 < 153)
m1 = rep(0,100)
s1 = rep(0,100)
for (i in 1:100) {
mean1 = mean(sample(a$lead, 100, replace=TRUE))
sd1 = sd(sample(a$lead, 100, replace=TRUE))
m1[i] = mean1
s1[i] = sd1
}
ci_left1 = m1 - qt(0.975, df = 99) * s1 /sqrt(100)
ci_right1 = m1 + qt(0.975, df = 99) * s1 /sqrt(100)
length1 = ci_right1 - ci_left1
length1
data.frame(m1,s1,ci_left1, ci_right1)
sum(ci_left1 > 153) + sum(ci_right1 < 153)
m1 = rep(0,100)
s1 = rep(0,100)
for (i in 1:100) {
mean1 = mean(sample(a$lead, 100, replace=TRUE))
sd1 = sd(sample(a$lead, 100, replace=TRUE))
m1[i] = mean1
s1[i] = sd1
}
ci_left1 = m1 - qt(0.975, df = 99) * s1 /sqrt(100)
ci_right1 = m1 + qt(0.975, df = 99) * s1 /sqrt(100)
length1 = ci_right1 - ci_left1
length1
data.frame(m1,s1,ci_left1, ci_right1)
sum(ci_left1 > 153) + sum(ci_right1 < 153)
m1 = rep(0,100)
s1 = rep(0,100)
for (i in 1:100) {
mean1 = mean(sample(a$lead, 100, replace=TRUE))
sd1 = sd(sample(a$lead, 100, replace=TRUE))
m1[i] = mean1
s1[i] = sd1
}
ci_left1 = m1 - qt(0.975, df = 99) * s1 /sqrt(100)
ci_right1 = m1 + qt(0.975, df = 99) * s1 /sqrt(100)
length1 = ci_right1 - ci_left1
length1
data.frame(m1,s1,ci_left1, ci_right1)
sum(ci_left1 > 153) + sum(ci_right1 < 153)
